#######################################################################################
   
###                               @Soc_Net_Intel                                    ###

#######################################################################################

## mongo_new.conf parameters file

## Configuration File Options from version 2.6

##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------
##                          CORE OPTIONS
##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------


##-------------------------------------------------------------------------------------
##                            systemLog
##-------------------------------------------------------------------------------------

# systemLog:
	# systemLog.verbosity
		# Type: integer
		# Increases the amount of internal reporting returned on standard output or in log files. To increase the amount of information reported, increase the number.
	# systemLog.quiet
		# Type: integer
		# Increases the amount of internal reporting returned on standard output or in log files. To increase the amount of information reported, increase the number.
	# systemLog.traceAllExceptions
		# Type: boolean
		# Prints verbose information for debugging. Used for additional logging in support-related troubleshooting.
	# systemLog.syslogFacility
		# Type: string
		# Default: user
		# Specifies the facility level used when logging messages to syslog. The value you specify must be supported by your operating system’s implementation of syslog. To use this option, you must enable the --syslog option.
	# systemLog.path
		# Type: string
		# Sends all diagnostic logging information to a log file instead of to standard output or to the host’s syslog system. MongoDB creates the log file at the path you specify.
		# By default, MongoDB overwrites the log file when the process restarts. To instead append to the log file, set the --logappend option.
	# systemLog.logAppend
		# Type: boolean
		# Default: False
		# Appends new entries to the end of the log file rather than overwriting the content of the log when the mongos or mongod instance restarts.
	# systemLog.destination
		# Type: string
		# Specify either file or syslog. If you specify file you must also specify systemLog.path.
	# systemLog.timeStampFormat
		# Type: string
		# Default: iso8601-local
		# The time format for timestamps in log messages. Specify one of the following values:
			# Value	        Description
			# ctime	        Displays timestamps as Wed Dec 31 18:17:54.811.
			# iso8601-utc	Displays timestamps in Coordinated Universal Time (UTC) in the ISO-8601 format. For example, for New York at the start of the Epoch: 1970-01-01T00:00:00.000Z
			# iso8601-local	Displays timestamps in local time in the ISO-8601 format. For example, for New York at the start of the Epoch: 1969-12-31T19:00:00.000+0500


##-------------------------------------------------------------------------------------
##                            processManagement
##-------------------------------------------------------------------------------------

# processManagement
	# processManagement.pidFilePath
		# Type: string
		# Specifies a file location to hold the process ID of the mongos or mongod process where mongos or mongod will write its PID. This is useful for tracking the mongos or mongod process in combination with the --fork option.
		# Without a specified processManagement.pidFilePath option, the process creates no PID file.
	# processManagement.fork
		# Type: boolean
		# Default: False
		# Enables a daemon mode that runs the mongos or mongod process in the background. By default mongos or mongod does not run as a daemon: typically you will run mongos or mongod as a daemon, either by using processManagement.fork or by using a controlling process that handles the daemonization process (e.g. as with upstart and systemd).


##-------------------------------------------------------------------------------------
##                            net
##-------------------------------------------------------------------------------------


# net
	# net.port
		# Type: integer
		# Default: 27017
		# Specifies the TCP port on which the MongoDB instance listens for client connections.
	# net.bindIp
		# Type: string
		# Default: All interfaces.
		# Changed in version 2.6.0: The deb and rpm packages include a default configuration file that sets net.bindIp to 127.0.0.1.
		# Specifies the IP address that mongos or mongod binds to in order to listen for connections from applications. You may attach mongos or mongod to any interface. When attaching mongos or mongod to a publicly accessible interface, ensure that you have implemented proper authentication and firewall restrictions to protect the integrity of your database.
		# To bind to multiple IP addresses, enter a list of comma separated values.
	# net.maxIncomingConnections
		# Type: integer
		# Default: 1000000
		# The maximum number of simultaneous connections that mongos or mongod will accept. This setting has no effect if it is higher than your operating system’s configured maximum connection tracking threshold.
		# Changed in version 2.6: MongoDB removed the upward limit on the maxIncomingConnections setting.
		# This is particularly useful for a mongos if you have a client that creates a number of connections but allows them to timeout rather than close the connections. When you set this option, ensure the value is slightly higher than the size of the connection pool or the total number of connections, to prevent erroneous connection spikes from propagating to the members of a sharded cluster.
	# net.wireObjectCheck
		# Type: boolean
		# Default: True
		# Forces the mongod or mongos instance to validate all requests from clients upon receipt to prevent clients from inserting malformed or invalid BSON into a MongoDB database.
		# For objects with a high degree of sub-document nesting, net.wireObjectCheck can have a small impact on performance.
	# net.http.enabled
		# Type: boolean
		# Default: False
		# New in version 2.6.
		# Enables the HTTP interface. Enabling the interface can increase network exposure.
		# Leave the HTTP interface disabled for production deployments. If you do enable this interface, you should only allow trusted clients to access this port. See Firewalls.
		# NOTE: In MongoDB Enterprise, the HTTP Console does not support Kerberos Authentication.
	# net.unixDomainSocket.enabled
		# Type: boolean
		# Default: False
		# Disables listening on the UNIX domain socket. The mongos or mongod process always listens on the UNIX socket unless one of the following is true:
			# net.unixDomainSocket.enabled is set
			# bindIp is not set
			# bindIp does not specify 127.0.0.1
		# New in version 2.6: mongos or mongod installed from official .deb and .rpm packages have the bind_ip configuration set to 127.0.0.1 by default.
	# net.unixDomainSocket.pathPrefix
		# Type: string
		# Default: /tmp
		# The path for the UNIX socket. If this option has no value, the mongos or mongod process creates a socket with /tmp as a prefix. MongoDB creates and listens on a UNIX socket unless one of the following is true:
			# --nounixsocket is set
			# bindIp is not set
			# bindIp does not specify 127.0.0.1
	# net.ipv6
		# Type: boolean
		# Default: False
		# Enables IPv6 support and allows the mongos or mongod to connect to the MongoDB instance using an IPv6 network. All MongoDB programs and processes disable IPv6 support by default.
	# net.http.JSONPEnabled
		# Type: boolean
		# Default: False
		# Permits JSONP access via an HTTP interface. Enabling the interface can increase network exposure. The net.http.JSONPEnabled option enables the HTTP interface, even if the HTTP interface option is disabled.
		# The net.http.JSONPEnabled option is available only for mongod.
	# net.http.RESTInterfaceEnabled
		# Type: boolean
		# Default: False
		# Enables the simple REST API. Enabling the REST API enables the HTTP interface, even if the HTTP interface option is disabled, and as a result can increase network exposure.
		# The net.http.RESTInterfaceEnabled option is available only for mongod.
	# net.ssl.sslOnNormalPorts
		# Type: boolean
		# Deprecated since version 2.6.
		# Enables SSL for mongos or mongod.
		# With net.ssl.sslOnNormalPorts, a mongos or mongod requires SSL encryption for all connections on the default MongoDB port, or the port specified by --port. By default, --sslOnNormalPorts is disabled.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.mode
		# Type: string
		# New in version 2.6.
		# Enables SSL or mixed SSL on a port. The argument to the net.ssl.mode option can be one of the following:
			# Value	        Description
			# disabled	The server does not use SSL.
			# allowSSL	Connections between servers do not use SSL. For incoming connections, the server accepts both SSL and non-SSL.
			# preferSSL	Connections between servers use SSL. For incoming connections, the server accepts both SSL and non-SSL.
			# requireSSL	The server uses and accepts only SSL encrypted connections.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.PEMKeyFile
		# Type: string
		# New in version 2.2.
		# Specifies the .pem file that contains both the SSL certificate and key. Specify the file name of the .pem file using relative or absolute paths.
		# When SSL is enabled, you must specify net.ssl.PEMKeyFile.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.PEMKeyPassword
		# Type: string
		# New in version 2.2.
		# Specifies the password to de-crypt the certificate-key file (i.e. --sslPEMKeyFile). Use the net.ssl.PEMKeyPassword option only if the certificate-key file is encrypted. In all cases, the mongos or mongod will redact the password from all logging and reporting output.
		# Changed in version 2.6: If the private key in the PEM file is encrypted and you do not specify the net.ssl.PEMKeyPassword option, the mongos or mongod will prompt for a passphrase. See SSL Certificate Passphrase.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.clusterFile
		# Type: string
		# New in version 2.6.
		# Specifies the .pem file that contains the x.509 certificate-key file for membership authentication for the cluster or replica set.
		# If net.ssl.clusterFile does not specify the .pem file for internal cluster authentication, the cluster uses the .pem file specified in the PEMKeyFile option.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.clusterPassword
		# Type: string
		# New in version 2.6.
		# Specifies the password to de-crypt the x.509 certificate-key file specified with --sslClusterFile. Use the net.ssl.clusterPassword option only if the certificate-key file is encrypted. In all cases, the mongos or mongod will redact the password from all logging and reporting output.
		# If the x.509 key file is encrypted and you do not specify the net.ssl.clusterPassword option, the mongos or mongod will prompt for a passphrase. See SSL Certificate Passphrase.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.CAFile
		# Type: string
		# New in version 2.4.
		# Specifies the .pem file that contains the root certificate chain from the Certificate Authority. Specify the file name of the .pem file using relative or absolute paths.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
		# WARNING: If the --sslCAFile option and its target file are not specified, x.509 client and member authentication will not function. mongod, and mongos in sharded systems, will not be able to verify the certificates of processes connecting to it against the trusted certificate authority (CA) that issued them, breaking the certificate chain. As of version 2.6.4, mongod will not start with x.509 authentication enabled if the CA file is not specified.
	# net.ssl.CRLFile
		# Type: string
		# New in version 2.4.
		# Specifies the .pem file that contains the Certificate Revocation List. Specify the file name of the .pem file using relative or absolute paths.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.weakCertificateValidation
		# Type: boolean
		# New in version 2.4.
		# Disables the requirement for SSL certificate validation that --sslCAFile enables. With the net.ssl.weakCertificateValidation option, the mongos or mongod will accept connections when the client does not present a certificate when establishing the connection.
		# If the client presents a certificate and the mongos or mongod has net.ssl.weakCertificateValidation enabled, the mongos or mongod will validate the certificate using the root certificate chain specified by --sslCAFile and reject clients with invalid certificates.
		# Use the net.ssl.weakCertificateValidation option if you have a mixed deployment that includes clients that do not or cannot present certificates to the mongos or mongod.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.allowInvalidCertificates
		# Type: boolean
		# New in version 2.6.
		# Bypasses the validation checks for SSL certificates on other servers in the cluster and allows the use of invalid certificates. When using the allowInvalidCertificates setting, MongoDB logs as a warning the use of the invalid certificate.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# net.ssl.FIPSMode
		# Type: boolean
		# New in version 2.4.
		# Directs the mongos or mongod to use the FIPS mode of the installed OpenSSL library. Your system must have a FIPS compliant OpenSSL library to use the net.ssl.FIPSMode option.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.


##-------------------------------------------------------------------------------------
##                            security
##-------------------------------------------------------------------------------------

# security
	# security.keyFile
		# Type: string
		# Specifies the path to a key file that stores the shared secret that MongoDB instances use to authenticate to each other in a sharded cluster or replica set. keyFile implies security.authorization. See Authentication Between MongoDB Instances for more information.
	# security.clusterAuthMode
		# Type: string
		# Default: keyFile
		# New in version 2.6.
		# The authentication mode used for cluster authentication. If you use internal x.509 authentication, specify so here. This option can have one of the following values:
			# Value	        Description
			# keyFile	Use a keyfile for authentication. Accept only keyfiles.
			# sendKeyFile	For rolling upgrade purposes. Send a keyfile for authentication but can accept both keyfiles and x.509 certificates.
			# sendX509	For rolling upgrade purposes. Send the x.509 certificate for authentication but can accept both keyfiles and x.509 certificates.
			# x509	        Recommended. Send the x.509 certificate for authentication and accept only x.509 certificates.
		# The default distribution of MongoDB does not contain support for SSL. For more information on MongoDB and SSL, see Configure mongod and mongos for SSL.
	# security.authorization
		# Type: string
			# Default: disabled
			# Enables Role-Based Access Control (RBAC) to govern each user’s access to database resources and operations.
			# Set this option to one of the following:
				# Value	        Description
				# enabled	A user can access only the database resources and actions for which they have been granted privileges.
				# disabled	A user can access any database and perform any action.
			# See Authorization for more information.
			# The security.authorization option is available only for mongod.
	# security.sasl.hostName
		# Type: string
		# A fully qualified server domain name for the purpose of configuring SASL and Kerberos authentication. The SASL hostname overrides the hostname only for the configuration of SASL and Kerberos.
		# For mongo shell and other MongoDB tools to connect to the new hostName, see the gssapiHostName option in the mongo shell and other tools.
	# security.sasl.serviceName
		# Type: string
		# Registered name of the service using SASL. This option allows you to override the default Kerberos service name component of the Kerberos principal name, on a per-instance basis. If unspecified, the default value is mongodb.
		# MongoDB permits setting this option only at startup. The setParameter can not change this setting.
		# This option is available only in MongoDB Enterprise.
	# security.sasl.saslauthdSocketPath
		# Type: string
		# The path to the UNIX domain socket file for saslauthd.
	# security.javascriptEnabled
		# Type: boolean
		# Default: True
		# Enables or disables the JavaScript execution engine. When disabled, $where, mapReduce, group and any other operation that requires a mongod instance to execute JavaScript.


##-------------------------------------------------------------------------------------
##                            operationProfiling
##-------------------------------------------------------------------------------------

# operationProfiling
	# operationProfiling.slowOpThresholdMs
		# Type: integer
		# Default: 100
		# The threshold in milliseconds at which the database profiler considers a query slow. MongoDB records all slow queries to the log, even when the database profiler is off. When the profiler is on, it writes to the system.profile collection. See the profile command for more information on the database profiler.
		# The operationProfiling.slowOpThresholdMs option is available only for mongod.
	# operationProfiling.mode
		# Type: string
		# Default: off
		# Changes the level of database profiling, which inserts information about operation performance into standard output or a log file. Specify one of the following levels:
			# Level         Setting
			# off	        Off. No profiling.
			# slowOp	On. Only includes slow operations.
			# all	        On. Includes all operations.
		# Database profiling can impact database performance. Enable this option only after careful consideration.
		# The operationProfiling.mode option is available only for mongod.


##-------------------------------------------------------------------------------------
##                            storage
##-------------------------------------------------------------------------------------


# storage
	# storage.dbPath
		# Type: string
		# Default: /data/db on Linux and OS X, \data\db on Windows
		# The directory where the mongod instance stores its data.
		# If you installed MongoDB using a package management system, check the /etc/mongodb.conf file provided by your packages to see the directory is specified.
		# The storage.dbPath option is available only for mongod.
	# storage.directoryPerDB
		# Type: boolean
		# Default: False
		# Stores each database’s files in its own folder in the data directory. When applied to an existing system, the directoryPerDB option alters the storage pattern of the data directory.
		# Use this option in conjunction with your file system and device configuration so that MongoDB will store data on a number of distinct disk devices to increase write throughput or disk capacity.
		# WARNING: To enable this option for an existing system, migrate the database-specific data files to the new directory structure before enabling directoryPerDB. Database-specific data files begin with the name of an existing database and end with either “ns” or a number. For example, the following data directory includes files for the local and test databases:
			# journal
			# mongod.lock
			# local.0
			# local.1
			# local.ns
			# test.0
			# test.1
			# test.ns
		# After migration, the data directory would have the following structure:
			# journal
			# mongod.lock
			# local/local.0
			# local/local.1
			# local/local.ns
			# test/test.0
			# test/test.1
			# test/test.ns
		# The storage.directoryPerDB option is available only for mongod.
	# storage.indexBuildRetry
		# Type: boolean
		# Default: True
		# Selects whether mongod rebuilds incomplete indexes on the next start up. This applies in cases where mongod restarts after it has shut down or stopped in the middle of an index build. In such cases, mongod always removes any incomplete indexes, and then, by default, attempts to rebuild them. To stop mongod from rebuilding indexes, set this option to false.
		# The storage.indexBuildRetry option is available only for mongod.
	# storage.preallocDataFiles
		# Type: boolean
		# Default: True
		# Disables the preallocation of data files. This shortens the start up time in some cases and can cause significant performance penalties during normal operations.
		# The storage.preallocDataFiles option is available only for mongod.
	# storage.nsSize
		# Type: integer
		# Default: 16
		# Specifies the default size for namespace files, which are files that end in .ns. Each collection and index counts as a namespace.
		# Use this setting to control size for newly created namespace files. This option has no impact on existing files. The maximum size for a namespace file is 2047 megabytes. The default value of 16 megabytes provides for approximately 24,000 namespaces.
		# The storage.nsSize option is available only for mongod.
	# storage.quota.enforced
		# Type: Boolean
		# Default: false
		# Enables a maximum limit for the number data files each database can have. When running with the storage.quota.enforced option, MongoDB has a maximum of 8 data files per database. Adjust the quota with storage.quota.maxFilesPerDB.
		# The storage.quota.enforced option is available only for mongod.
	# storage.quota.maxFilesPerDB
		# Type: integer
		# Default: 8
		# Modifies the limit on the number of data files per database. storage.quota.maxFilesPerDB option requires that you set storage.quota.enforced.
		# The storage.quota.maxFilesPerDB option is available only for mongod.
	# storage.smallFiles
		# Type: boolean
		# Default: False
		# Sets MongoDB to use a smaller default file size. The storage.smallFiles option reduces the initial size for data files and limits the maximum size to 512 megabytes. storage.smallFiles also reduces the size of each journal file from 1 gigabyte to 128 megabytes. Use storage.smallFiles if you have a large number of databases that each holds a small quantity of data.
		# The storage.smallFiles option can lead the mongod instance to create a large number of files, which can affect performance for larger databases.
		# The storage.smallFiles option is available only for mongod.
	# storage.syncPeriodSecs
		# Type: number
		# Default: 60
		# Controls how much time can pass before MongoDB flushes data to the data files via an fsync operation. Do not set this value on production systems. In almost every situation, you should use the default setting.
		# WARNING: If you set storage.syncPeriodSecs to 0, MongoDB will not sync the memory mapped files to disk.
		# The mongod process writes data very quickly to the journal and lazily to the data files. syncPeriodSecs has no effect on the journal files or journaling.
		# The serverStatus command reports the background flush thread’s status via the backgroundFlushing field.
		# The storage.syncPeriodSecs option is available only for mongod.
	# storage.repairPath
		# Type: string
		# Default: A _tmp directory within the path specified by the dbPath option.
		# Specifies the root directory containing MongoDB data files to use for the --repair operation.
		# The storage.repairPath option is available only for mongod.
	# storage.journal.enabled
		# Type: boolean
		# Default: true on 64-bit systems, false on 32-bit systems
		# Enables the durability journal to ensure data files remain valid and recoverable. This option applies only when you specify the --dbpath option. The mongod enables journaling by default on 64-bit builds of versions after 2.0.
		# The storage.journal.enabled option is available only for mongod.
	# storage.journal.debugFlags
		# Type: integer
		# Provides functionality for testing. Not for general use, and will affect data file integrity in the case of abnormal system shutdown.
		# The storage.journal.debugFlags option is available only for mongod.
	# storage.journal.commitIntervalMs
		# Type: number
		# Default: 100 or 30
		# The maximum amount of time the mongod process allows between journal operations. Values can range from 2 to 300 milliseconds. Lower values increase the durability of the journal, at the expense of disk performance.
		# The default journal commit interval is 100 milliseconds if a single block device (e.g. physical volume, RAID device, or LVM volume) contains both the journal and the data files.
		# If the journal is on a different block device than the data files the default journal commit interval is 30 milliseconds.
		# To force mongod to commit to the journal more frequently, you can specify j:true. When a write operation with j:true is pending, mongod will reduce commitIntervalMs to a third of the set value.
		# The storage.journal.commitIntervalMs option is available only for mongod.


##-------------------------------------------------------------------------------------
##                            replication
##-------------------------------------------------------------------------------------

# replication
	# replication.oplogSizeMB
		# Type: integer
		# Specifies a maximum size in megabytes for the replication operation log (i.e., the oplog). The mongod process creates an oplog based on the maximum amount of space available. For 64-bit systems, the oplog is typically 5% of available disk space. Once the mongod has created the oplog for the first time, changing the replication.oplogSizeMB option will not affect the size of the oplog.
		# See Oplog Size for more information.
		# The replication.oplogSizeMB option is available only for mongod.
	# replication.replSetName
		# Type: string
		# Configures replication. Specify a replica set name as an argument to this set. All hosts in the replica set must have the same set name.
		# If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name.
		# The replication.replSetName option is available only for mongod.
	# replication.secondaryIndexPrefetch
		# Type: string
		# Default: all
		# New in version 2.2.
		# Determines which indexes secondary members of a replica set load into memory before applying operations from the oplog. By default secondaries load all indexes related to an operation into memory before applying operations from the oplog. This option can have one of the following values:
			# Value	       Description
			# none	       Secondaries do not load indexes into memory.
			# all	       Secondaries load all indexes related to an operation.
			# _id_onlySecondaries load no additional indexes into memory beyond the already existing _id index.
		# The replication.secondaryIndexPrefetch option is available only for mongod.


##-------------------------------------------------------------------------------------
##                            sharding
##-------------------------------------------------------------------------------------

# sharding
	# sharding.clusterRole
		# Type: string
		# Selects the role the mongod instance has in the sharded cluster. Set this option to one of the following:
			# Value	        Description
			# configsvr	Start this instance as a config server. The instance starts on port 27019 by default.
			# shardsvr	Start this instance as a shard. The instance starts on port 27018 by default.
		# The sharding.clusterRole option is available only for mongod.
	# sharding.archiveMovedChunks
		# Type: boolean
		# New in version 2.4.
		# Changed in version 2.6: sharding.archiveMovedChunks is now the default behavior of MongoDB.
		# When true, the sharding.archiveMovedChunks option forces the mongod instances to save all documents migrated from this shard during chunk migrations to the moveChunk directory of the storage.dbPath. MongoDB does not delete data stored in moveChunk.


##-------------------------------------------------------------------------------------
##                            auditLog
##-------------------------------------------------------------------------------------

# auditLog
	# auditLog.destination
		# Type: string
		# New in version 2.6.
		# Enables auditing. The auditLog.destination option can have one of the following values:
			# Value	        Description
			# syslog        Output the audit events to syslog in JSON format. Not available on Windows. Audit messages have a syslog severity level of info and a facility level of user. The syslog message limit can result in the truncation of audit messages. The auditing system will neither detect the truncation nor error upon its occurrence.
			# console	      Output the audit events to stdout in JSON format.
			# file	        Output the audit events to the file specified in --auditPath in the format specified in --auditFormat.
		# NOTE: The audit system is available only in MongoDB Enterprise.
	# auditLog.format
		# Type: string
		# New in version 2.6.
		# Specifies the format of the output file if --auditDestination is file. The auditLog.format option can have one of the following values:
			# Value	       Description
			# JSON	       Output the audit events in JSON format to the file specified in --auditPath.
			# BSON	       Output the audit events in BSON binary format to the file specified in --auditPath.
		# Printing audit events to a file in JSON format degrades server performance more than printing to a file in BSON format.
		# NOTE: The audit system is available only in MongoDB Enterprise.
	# auditLog.path
		# Type: string
		# New in version 2.6.
		# Specifies the output file for auditing if --auditDestination has value of file. The auditLog.path option can take either a full path name or a relative path name.
		# NOTE: The audit system is available only in MongoDB Enterprise.
	# auditLog.filter
		# Type: document
		# New in version 2.6.
		# Specifies the filter to limit the types of operations the audit system records. The option takes a document of the form:
			# { atype: <expression> }
			# For authentication operations, the option can also take a document of the form:
			# { atype: <expression>, "param.db": <database> }
		# NOTE: The audit system is available only in MongoDB Enterprise.


##-------------------------------------------------------------------------------------
##                            snmp
##-------------------------------------------------------------------------------------

# snmp
	# snmp.subagent
		# Type: boolean
		# Runs SNMP as a subagent. For more information, see Monitor MongoDB With SNMP on Linux.
		# The snmp.subagent option is available only for mongod.
	# snmp.master
		# Type: boolean
		# Runs SNMP as a master. For more information, see Monitor MongoDB With SNMP on Linux.
		# The snmp.master option is available only for mongod.



##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------
##                          MONGOS-ONLY-OPTIONS
##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------

# replication.localPingThresholdMs
	# Type: integer
	# Default: 15
	# Affects the logic that mongos uses when selecting replica set members to pass read operations to from clients. Specify a value in milliseconds. The default value of 15 corresponds to the default value in all of the client drivers.
	# When mongos receives a request that permits reads to secondary members, the mongos will:
		# Find the member of the set with the lowest ping time.
		# Construct a list of replica set members that is within a ping time of 15 milliseconds of the nearest suitable member of the set.
		# If you specify a value for the replication.localPingThresholdMs option, mongos will construct the list of replica members that are within the latency allowed by this value.
		# Select a member to read from at random from this list.
		# The ping time used for a member compared by the replication.localPingThresholdMs setting is a moving average of recent ping times, calculated at most every 10 seconds. As a result, some queries may reach members above the threshold until the mongos recalculates the average.
	# See the Member Selection section of the read preference documentation for more information.
# sharding.autoSplit
	# Type: boolean
	# Prevents mongos from automatically inserting metadata splits in a sharded collection. If set on all mongos instances, this prevents MongoDB from creating new chunks as the data in a collection grows.
	# Because any mongos in a cluster can create a split, to totally disable splitting in a cluster you must set sharding.autoSplit on all mongos.
	# WARNING: With sharding.autoSplit enabled, the data in your sharded cluster may become imbalanced over time. Enable with caution.
# sharding.configDB
	# Type: string
	# Specifies the configuration database for the sharded cluster. You must specify either 1 or 3 configuration servers, in a comma separated list. Always use 3 config servers in production environments.
	# All mongos instances must specify the exact same value for sharding.configDB
	# If your configuration databases reside in more that one data center, order the hosts so that first config sever in the list is the closest to the majority of your mongos instances.
	# WARNING: Never remove a config server from this setting, even if the config server is not available or offline.
# sharding.chunkSize
	# Type: integer
	# Default: 64
	# Determines the size in megabytes of each chunk in the sharded cluster. A size of 64 megabytes is ideal in most deployments: larger chunk size can lead to uneven data distribution; smaller chunk size can lead to inefficient movement of chunks between nodes.
	# This option affects chunk size only when you initialize the cluster for the first time. If you later modify the option, the new value has no effect. See the Modify Chunk Size in a Sharded Cluster procedure if you need to change the chunk size on an existing sharded cluster.


##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------
##                          WINDOWS-ONLY-OPTIONS
##-------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------


# processManagement.windowsService.serviceName
	# Type: string
	# Default: MongoDB
	# Set the service name of mongos or mongod when running as a Windows Service. Use this name with the net start <name> and net stop <name> operations.
	# You must use processManagement.windowsService.serviceName in conjunction with either the --install or --remove install option.
# processManagement.windowsService.displayName
	# Type: string
	# Default: MongoDB
	# Sets the name listed for MongoDB on the Services administrative application.
# processManagement.windowsService.description
	# Type: string
	# Default: MongoDB Server
	# Sets the mongos or mongod service description.
	# You must use processManagement.windowsService.description in conjunction with the --install option.
	# For descriptions that contain spaces, you must enclose the description in quotes.
# processManagement.windowsService.serviceUser
	# Type: string
	# Runs the mongos or mongod service in the context of a certain user. This user must have “Log on as a service” privileges.
	# You must use processManagement.windowsService.serviceUser in conjunction with the --install option.
# processManagement.windowsService.servicePassword
	# Type: string
	# Sets the password for <user> for mongos or mongod when running with the --serviceUser option.
	# You must use processManagement.windowsService.servicePassword in conjunction with the --install option.


